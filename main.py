#!/usr/bin/env python
# -*- coding: utf-8 -*-

from aiogram.dispatcher.filters import Text
from load import bot, dp
from aiogram import types
from text import*
from Forma import*
from config import*
from FormaRu import*
from database import*


btn = Button()
forma = FormaData()
db = Database()


@dp.message_handler(commands=['admin'])
async def start_handler(message: types.Message):
    print(message.from_user.id)

    if message.from_user.id == admin_id:
        await bot.send_message(
            message.from_user.id,
            text="–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ –∞–¥–º–∏–Ω %s"% message.from_user.first_name,
            reply_markup=btn.admin()
        )


@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    print(message.from_user.id)

    await bot.send_message(
        message.from_user.id,
        text="–¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑ *%s*" % message.from_user.first_name,
        parse_mode="MarkdownV2",
        reply_markup=btn.start_btn()
    )

@dp.message_handler(Text(equals="üá∞üáø “ö–∞–∑–∞“õ—à–∞"), content_types=['text'])
async def messageHandlerKZ(message: types.Message):
    await bot.send_message(
        message.from_user.id,
        text="–°”ô–ª–µ–º—Ç—Å—ñ–∑ –±–µ *%s*" % message.from_user.first_name,
        parse_mode="MarkdownV2"
    )

    await bot.send_message(
        message.from_user.id,
        text="–ë“±–ª —Ç–µ–ª–µ–≥—Ä–∞–º–º –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Å—ã–Ω–¥–∞ üí∞ –∫—Ä–∏–ø—Ç–æ –±–∏—Ä–∂–∞–Ω—ã –±–∞“õ—ã–ª–∞–π—Ç—ã–Ω —É–Ω–∏–∫–∞–ª–¥—ã –±–æ—Ç. “ö–∞–∑—ñ—Ä –¥–µ–º–æ –≤–µ—Ä—Å–∏—è–¥–∞.",
        reply_markup=btn.menu_kz(db.check(message.from_user.id))
    )

@dp.message_handler(Text(equals="üá∑üá∫ –†—É—Å—Å–∫–∞—è"), content_types=['text'])
async def messageHandlerRU(message: types.Message):
    await bot.send_message(
        message.from_user.id,
        text="–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ *%s*" % message.from_user.first_name,
        parse_mode="MarkdownV2"
    )

    await bot.send_message(
        message.from_user.id,
        text="–≠—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–ª–µ–¥–∏—Ç –∑–∞ –∫—Ä–∏–ø—Ç–æ–±–∏—Ä–∂–µ–π üí∞ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ Telegram. –°–µ–π—á–∞—Å –≤ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏.",
        reply_markup=btn.menu_ru(db.check(message.from_user.id))
    )


@dp.message_handler(Text(equals="üìà –ë–∏—Ä–∂–∞"), content_types=['text'])
async def messageHandler(message: types.Message):
    await bot.send_message(
        message.from_user.id,
        text="–ë–∏—Ä–∂–∞–º–µ–Ω API –±–∞–π–ª–∞–Ω—ã—Å—Ç–∞ —É–∞“õ—ã—Ç—à–∞ “õ–∞—Ç–µ–ª—ñ–∫—Ç–µ—Ä –±–∞—Ä!",
        reply_markup=btn.menu_kz(db.check(message.from_user.id))
    )

   
@dp.message_handler(Text(equals="üí∞ –ê—Ä–±–∏—Ç—Ä–∞–∂"), content_types=['text'])
async def messageHandler(message: types.Message):
    await FormaData.calc.set()

    await bot.send_message(
        message.from_user.id,
        text="–°—ñ–∑–¥–µ “õ–∞–Ω—à–∞ USDT –±–∞—Ä?",
        reply_markup=types.ReplyKeyboardMarkup(selective=True, resize_keyboard=True).add("–ë–∞—Å —Ç–∞—Ä—Ç—Éüôåüèª")
    )

@dp.message_handler(Text(equals="üó£ –¢–µ—Ö–Ω–∏–∫–∞–ª—ã“õ –∫”©–º–µ–∫"), content_types=['text'])
async def messageHandler(message: types.Message):
    await bot.send_message(
        message.from_user.id,
        text="87471850499 üì≤",
        reply_markup=btn.menu_kz(db.check(message.from_user.id))
    )

@dp.message_handler(Text(equals="üìà  –ë–∏—Ä–∂–∞"), content_types=['text'])
async def messageHandler(message: types.Message):
    await bot.send_message(
        message.from_user.id,
        text="–ò–º–µ—é—Ç—Å—è –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ —Å–≤—è–∑–∏ API —Å –±–∏—Ä–∂–µ–π!",
        reply_markup=btn.menu_ru(db.check(message.from_user.id))
    )

@dp.message_handler(Text(equals="üí∞  –ê—Ä–±–∏—Ç—Ä–∞–∂"), content_types=['text'])
async def messageHandler(message: types.Message):
    await FormaDataRU.calc.set()

    await bot.send_message(
        message.from_user.id,
        text="–°–∫–æ–ª—å–∫–æ —É –≤–∞—Å USDT?",
        reply_markup=types.ReplyKeyboardMarkup(selective=True, resize_keyboard=True).add("–û—Ç–º–µ–Ω–∞üôåüèª")
    )


@dp.message_handler(Text(equals="üó£ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞"), content_types=['text'])
async def messageHandler(message: types.Message):
    await bot.send_message(
        message.from_user.id,
        text="87471850499 üì≤",
        reply_markup=btn.menu_ru(db.check(message.from_user.id))
    )

@dp.message_handler(Text(equals="‚ùå Stop"), content_types=['text'])
async def messageHandler(message: types.Message):
    db.delete(message.from_user.id)
    await bot.send_message(
        message.from_user.id,
        text="–°—ñ–∑–¥—ñ“£ ”©—Ç—ñ–Ω—ñ—à—ñ“£—ñ–∑ –±–∞–∑–∞–¥–∞–Ω ‚ùå –∂–æ–π—ã–ª–¥—ã.",
        reply_markup=btn.menu_kz(db.check(message.from_user.id))
    )

@dp.message_handler(Text(equals="‚ùå  Stop"), content_types=['text'])
async def messageHandler(message: types.Message):
    db.delete(message.from_user.id)
    await bot.send_message(
        message.from_user.id,
        text="–í–∞—à –∑–∞–ø—Ä–æ—Å –±—ã–ª ‚ùå —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.",
        reply_markup=btn.menu_ru(db.check(message.from_user.id))
    )
